// Code generated by mockery v2.28.1. DO NOT EDIT.

package repository

import mock "github.com/stretchr/testify/mock"

// MockDynamoDBRepository is an autogenerated mock type for the DynamoDBRepository type
type MockDynamoDBRepository struct {
	mock.Mock
}

// ListAllTables provides a mock function with given fields:
func (_m *MockDynamoDBRepository) ListAllTables() ([]*string, error) {
	ret := _m.Called()

	var r0 []*string
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]*string, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []*string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*string)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockDynamoDBRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockDynamoDBRepository creates a new instance of MockDynamoDBRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockDynamoDBRepository(t mockConstructorTestingTNewMockDynamoDBRepository) *MockDynamoDBRepository {
	mock := &MockDynamoDBRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
