// Code generated by mockery v2.28.1. DO NOT EDIT.

package repository

import (
	s3control "github.com/aws/aws-sdk-go/service/s3control"
	mock "github.com/stretchr/testify/mock"
)

// MockS3ControlRepository is an autogenerated mock type for the S3ControlRepository type
type MockS3ControlRepository struct {
	mock.Mock
}

// DescribeAccountPublicAccessBlock provides a mock function with given fields: accountID
func (_m *MockS3ControlRepository) DescribeAccountPublicAccessBlock(accountID string) (*s3control.PublicAccessBlockConfiguration, error) {
	ret := _m.Called(accountID)

	var r0 *s3control.PublicAccessBlockConfiguration
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*s3control.PublicAccessBlockConfiguration, error)); ok {
		return rf(accountID)
	}
	if rf, ok := ret.Get(0).(func(string) *s3control.PublicAccessBlockConfiguration); ok {
		r0 = rf(accountID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*s3control.PublicAccessBlockConfiguration)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(accountID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockS3ControlRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockS3ControlRepository creates a new instance of MockS3ControlRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockS3ControlRepository(t mockConstructorTestingTNewMockS3ControlRepository) *MockS3ControlRepository {
	mock := &MockS3ControlRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
