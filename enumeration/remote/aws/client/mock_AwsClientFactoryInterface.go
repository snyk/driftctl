// Code generated by mockery v2.28.1. DO NOT EDIT.

package client

import (
	aws "github.com/aws/aws-sdk-go/aws"
	mock "github.com/stretchr/testify/mock"

	s3controliface "github.com/aws/aws-sdk-go/service/s3control/s3controliface"

	s3iface "github.com/aws/aws-sdk-go/service/s3/s3iface"
)

// MockAwsClientFactoryInterface is an autogenerated mock type for the AwsClientFactoryInterface type
type MockAwsClientFactoryInterface struct {
	mock.Mock
}

// GetS3Client provides a mock function with given fields: configs
func (_m *MockAwsClientFactoryInterface) GetS3Client(configs ...*aws.Config) s3iface.S3API {
	_va := make([]interface{}, len(configs))
	for _i := range configs {
		_va[_i] = configs[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 s3iface.S3API
	if rf, ok := ret.Get(0).(func(...*aws.Config) s3iface.S3API); ok {
		r0 = rf(configs...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(s3iface.S3API)
		}
	}

	return r0
}

// GetS3ControlClient provides a mock function with given fields: configs
func (_m *MockAwsClientFactoryInterface) GetS3ControlClient(configs ...*aws.Config) s3controliface.S3ControlAPI {
	_va := make([]interface{}, len(configs))
	for _i := range configs {
		_va[_i] = configs[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 s3controliface.S3ControlAPI
	if rf, ok := ret.Get(0).(func(...*aws.Config) s3controliface.S3ControlAPI); ok {
		r0 = rf(configs...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(s3controliface.S3ControlAPI)
		}
	}

	return r0
}

type mockConstructorTestingTNewMockAwsClientFactoryInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockAwsClientFactoryInterface creates a new instance of MockAwsClientFactoryInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockAwsClientFactoryInterface(t mockConstructorTestingTNewMockAwsClientFactoryInterface) *MockAwsClientFactoryInterface {
	mock := &MockAwsClientFactoryInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
