// Code generated by mockery v2.28.1. DO NOT EDIT.

package repository

import (
	armnetwork "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
	mock "github.com/stretchr/testify/mock"
)

// mockSubnetsClient is an autogenerated mock type for the subnetsClient type
type mockSubnetsClient struct {
	mock.Mock
}

// List provides a mock function with given fields: resourceGroupName, virtualNetworkName, options
func (_m *mockSubnetsClient) List(resourceGroupName string, virtualNetworkName string, options *armnetwork.SubnetsListOptions) subnetsListPager {
	ret := _m.Called(resourceGroupName, virtualNetworkName, options)

	var r0 subnetsListPager
	if rf, ok := ret.Get(0).(func(string, string, *armnetwork.SubnetsListOptions) subnetsListPager); ok {
		r0 = rf(resourceGroupName, virtualNetworkName, options)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(subnetsListPager)
		}
	}

	return r0
}

type mockConstructorTestingTnewMockSubnetsClient interface {
	mock.TestingT
	Cleanup(func())
}

// newMockSubnetsClient creates a new instance of mockSubnetsClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockSubnetsClient(t mockConstructorTestingTnewMockSubnetsClient) *mockSubnetsClient {
	mock := &mockSubnetsClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
