// Code generated by mockery v2.28.1. DO NOT EDIT.

package repository

import (
	armnetwork "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
	mock "github.com/stretchr/testify/mock"
)

// mockFirewallsClient is an autogenerated mock type for the firewallsClient type
type mockFirewallsClient struct {
	mock.Mock
}

// ListAll provides a mock function with given fields: options
func (_m *mockFirewallsClient) ListAll(options *armnetwork.AzureFirewallsListAllOptions) firewallsListAllPager {
	ret := _m.Called(options)

	var r0 firewallsListAllPager
	if rf, ok := ret.Get(0).(func(*armnetwork.AzureFirewallsListAllOptions) firewallsListAllPager); ok {
		r0 = rf(options)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(firewallsListAllPager)
		}
	}

	return r0
}

type mockConstructorTestingTnewMockFirewallsClient interface {
	mock.TestingT
	Cleanup(func())
}

// newMockFirewallsClient creates a new instance of mockFirewallsClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockFirewallsClient(t mockConstructorTestingTnewMockFirewallsClient) *mockFirewallsClient {
	mock := &mockFirewallsClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
