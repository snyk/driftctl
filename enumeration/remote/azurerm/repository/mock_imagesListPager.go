// Code generated by mockery v2.28.1. DO NOT EDIT.

package repository

import (
	context "context"

	armcompute "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute"

	mock "github.com/stretchr/testify/mock"
)

// mockImagesListPager is an autogenerated mock type for the imagesListPager type
type mockImagesListPager struct {
	mock.Mock
}

// Err provides a mock function with given fields:
func (_m *mockImagesListPager) Err() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NextPage provides a mock function with given fields: ctx
func (_m *mockImagesListPager) NextPage(ctx context.Context) bool {
	ret := _m.Called(ctx)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context) bool); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// PageResponse provides a mock function with given fields:
func (_m *mockImagesListPager) PageResponse() armcompute.ImagesListResponse {
	ret := _m.Called()

	var r0 armcompute.ImagesListResponse
	if rf, ok := ret.Get(0).(func() armcompute.ImagesListResponse); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(armcompute.ImagesListResponse)
	}

	return r0
}

type mockConstructorTestingTnewMockImagesListPager interface {
	mock.TestingT
	Cleanup(func())
}

// newMockImagesListPager creates a new instance of mockImagesListPager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockImagesListPager(t mockConstructorTestingTnewMockImagesListPager) *mockImagesListPager {
	mock := &mockImagesListPager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
