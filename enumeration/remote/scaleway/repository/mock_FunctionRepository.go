// Code generated by mockery v2.23.1. DO NOT EDIT.

package repository

import (
	"github.com/scaleway/scaleway-sdk-go/api/function/v1beta1"
	mock "github.com/stretchr/testify/mock"
)

// MockFunctionRepository is an autogenerated mock type for the FunctionRepository type
type MockFunctionRepository struct {
	mock.Mock
}

// ListAllNamespaces provides a mock function with given fields:
func (_m *MockFunctionRepository) ListAllNamespaces() ([]*function.Namespace, error) {
	ret := _m.Called()

	var r0 []*function.Namespace
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]*function.Namespace, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []*function.Namespace); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*function.Namespace)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockFunctionRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockFunctionRepository creates a new instance of MockFunctionRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockFunctionRepository(t mockConstructorTestingTNewMockFunctionRepository) *MockFunctionRepository {
	mock := &MockFunctionRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
