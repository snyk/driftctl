// Code generated by mockery v2.28.1. DO NOT EDIT.

package output

import mock "github.com/stretchr/testify/mock"

// MockProgress is an autogenerated mock type for the Progress type
type MockProgress struct {
	mock.Mock
}

// Inc provides a mock function with given fields:
func (_m *MockProgress) Inc() {
	_m.Called()
}

// Start provides a mock function with given fields:
func (_m *MockProgress) Start() {
	_m.Called()
}

// Stop provides a mock function with given fields:
func (_m *MockProgress) Stop() {
	_m.Called()
}

// Val provides a mock function with given fields:
func (_m *MockProgress) Val() uint64 {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

type mockConstructorTestingTNewMockProgress interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockProgress creates a new instance of MockProgress. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockProgress(t mockConstructorTestingTNewMockProgress) *MockProgress {
	mock := &MockProgress{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
